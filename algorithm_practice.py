# -*- coding: utf-8 -*-
"""Algorithm Practice.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aZ08VlIO9XW3WTzI0H9FiJodr2p2i2W0
"""

# Stock Buy and Sell for Maximum Profit
# O(n) time
def maxProfit(prices):
  minPrice = prices[0]
  maxProfit = 0
  for i in range(len(prices)):
    if prices[i] < minPrice:
      minPrice = prices[i]
      minIndex = i
    elif prices[i] - minPrice > maxProfit:
      maxProfit = prices[i] - minPrice
      maxIndex = i
  return maxProfit, minIndex, maxIndex

# O(n**2) time
def maxProf(prices):
  maxProfit = 0
  for i in range(len(prices)):
    for j in range(i+1, len(prices)):
      if prices[j] - prices[i] > maxProfit:
        maxProfit = prices[j] - prices[i] 
        minIndex, maxIndex = i, j
  return maxProfit, minIndex, maxIndex

maxProfit(prices=[1,4,0,6,7,3])

maxProf(prices=[1,4,0,6,7,3])

